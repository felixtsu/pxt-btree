<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="-o_D95vAO,T=,zdwTAZ^" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="IM9V?WLUrnYh5X=LZ.2y" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace btree {" line1="" line2="    export class TreeNode {" line3="        val:number;" line4="        left:TreeNode;" line5="        right:TreeNode;" line6="    }" line7="" line8="    export class Tree {" line9="" line10="        constructor(){}" line11="" line12="    }" line13="" line14="    export function buildTree(values :number[]) : TreeNode {" line15="        if (values.length == 0) {" line16="            return null;" line17="        }" line18="" line19="        let mid = Math.floor(values.length / 2)" line20="" line21="        let root = new TreeNode()" line22="        root.val = values[mid]" line23="        " line24="        if (mid - 1 &gt; 0) {" line25="            let left = values.slice(0, mid)" line26="            root.left = buildTree(left)" line27="        }" line28="        if (mid + 1 &lt; values.length) {" line29="            let right = values.slice(mid + 1)" line30="            root.right = buildTree(right);" line31="        }" line32="        return root;" line33="" line34="    }" line35="" line36="}" numlines="37"></mutation></block></statement></block></xml>